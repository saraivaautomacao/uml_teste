unit senhavendedor;

interface

uses
  Windows, Messages, SysUtils, Classes, Graphics, Controls, Forms, Dialogs,
  StdCtrls,rotinas;

type
  TfrSenhaVendedor = class(TForm)
    edCodVend: TEdit;
    edSenha: TEdit;
    stVendedor: TStaticText;
    Label1: TLabel;
    Label2: TLabel;
    Button1: TButton;
    Button2: TButton;
    procedure FormShow(Sender: TObject);
    procedure edCodVendExit(Sender: TObject);
    procedure Button1Click(Sender: TObject);
    procedure FormCloseQuery(Sender: TObject; var CanClose: Boolean);
    procedure Button2Click(Sender: TObject);
  private
    { Private declarations }

  public
    { Public declarations }

  end;

var
  frSenhaVendedor: TfrSenhaVendedor;

implementation

uses Dados, prevenda1,vendedorvo,vendedorcontroller;

{$R *.DFM}

procedure TfrSenhaVendedor.FormShow(Sender: TObject);
begin
   edcodVend.Clear;
   edSenha.clear;
   edCodVend.setFocus;

   stVendedor.caption:='';



end;

procedure TfrSenhaVendedor.edCodVendExit(Sender: TObject);
begin
    stVendedor.caption:='';
    If Trim(edCodvend.text)<>'' Then
    begin
       Vendedor:=TVendedorVo.create;
       vendedor:=TVendedorController.ConsultaCodigo(edCodVend.TExt);
       If vendedor=nil Then
       begin
           edcodvend.clear;
           edcodvend.setfocus;
           Mensagem('Não não encontrado');
       end
       Else
         stVendedor.caption:=vendedor.nome;
    End;
end;

procedure TfrSenhaVendedor.Button1Click(Sender: TObject);
begin
   if trim(edCodvend.text)<>'' Then
      if (vendedor=Nil) or
       (vendedor.senha<>edSenha.text) Then
         vendedor:=nil;



end;

procedure TfrSenhaVendedor.FormCloseQuery(Sender: TObject;
  var CanClose: Boolean);
begin
    if modalresult=mrok Then
    begin
     If vendedor=nil Then
     begin
        canclose:=false;
        Mensagem('usuario/senha invalido');
        edCodVend.setFocus;
     end;
    end;
end;

procedure TfrSenhaVendedor.Button2Click(Sender: TObject);
begin
   vendedor:=nil;
end;

end.
